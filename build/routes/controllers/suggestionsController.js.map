{"version":3,"sources":["../../../server/routes/controllers/suggestionsController.js"],"names":[],"mappings":"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","file":"suggestionsController.js","sourcesContent":["function SuggestionsController(cookies, socket, callback){\n  let limit = require(\"simple-rate-limiter\");\n  let requestLib = require(\"request\");\n  let dc = false;\n  let ourRequest = (url, callback, timeout = 0) => {\n     if(dc){\n      return;\n     }\n    setTimeout(() => { return requestLib({ url: url, forever: true, pool: { maxSockets: Infinity } }, callback); }, timeout);\n  };\n  let request = limit(ourRequest).to(3000).per(10000);\n  let result;\n  let status;\n  let url;\n  let matchList;\n  let winners = [];\n  let losers = [];\n  let matchArray = [];\n  let displayName = \"\";\n  let id;\n  let wait = 0;\n  let count = 0;\n  let urlArray = [];\n\n\n  socket.on(\"disconnect\", () => {\n    dc = true;\n  });\n\n  let dataHandler3 = () => {\n    let notMeFilter = (name) => {\n      return name !== displayName;\n    };\n    winners = winners.filter(notMeFilter);\n    losers = losers.filter(notMeFilter);\n    let arrayCounter = (list) => {\n      let listCount = {};\n      for(var x = 0; x < list.length; x++){\n        if(listCount[list[x]]){\n          listCount[list[x]] += 1;\n        }\n        else {\n          listCount[list[x]] = 1;\n        }\n      }\n      return listCount;\n    };\n    let loseCount = arrayCounter(losers);\n    let winCount = arrayCounter(winners);\n    let winCountMap = (player, keyIndex) => {\n      let mixed = false;\n      Object.keys(loseCount).forEach((playerLoss, keyIndexLoss) => {\n        if(playerLoss === player){\n          mixed = true;\n        }\n      });\n      if(mixed){\n        return { name: player, wins: winCount[player], losses: loseCount[player] };\n      }\n      return { name: player, wins: winCount[player] };\n    };\n    let loseCountFilter = (player) => {\n      return !winCount.hasOwnProperty(player);\n    }\n    let loseCountMap = (player) => {\n      return { name: player, losses: loseCount[player] };\n    };\n    let winMapped = Object.keys(winCount).map(winCountMap);\n    let loseCountFiltered = Object.keys(loseCount).filter(loseCountFilter);\n    let loseMapped = loseCountFiltered.map(loseCountMap);\n    let total = winMapped.concat(loseMapped);\n    let totalMap = (player) => {\n      let totalNum = 0;\n      let winNum = 0;\n      if(player.hasOwnProperty(\"wins\")){\n        totalNum += player.wins;\n        winNum += player.wins;\n      }\n      if(player.hasOwnProperty(\"losses\")){\n        totalNum += player.losses;\n      }\n      let ratio = winNum / totalNum;\n      player.total = totalNum;\n      player.ratio = ratio;\n      player.percentage = Math.round(ratio * 10000)/100;\n      return player;\n    };\n    let totalMapped = total.map(totalMap);\n    let percentageSort = (a, b) => {\n      if(b.percentage === a.percentage){\n        return b.total - a.total;\n      }\n      return b.percentage - a.percentage;\n    };\n    totalMapped.sort(percentageSort);\n    let prefferedFilter = (player) => {\n      return (player.total > 2) && (player.ratio > .55);\n    };\n    let lessPrefferedFilter = (player) => {\n      return (player.ratio >= .5);\n    };\n    let preffered = totalMapped.filter(prefferedFilter);\n    let lessPreffered = totalMapped.filter(lessPrefferedFilter);\n    if(dc){\n      return;\n    }\n    if(wait !== 0){\n      let interval = setInterval(() => {\n        if(wait === 0){\n          clearInterval(interval);\n          return callback({ preffered: preffered, lessPreffered: lessPreffered, totalMapped: totalMapped, displayName: displayName });\n        }\n      }, 1000);\n    }\n    else {\n      return callback({ preffered: preffered, lessPreffered: lessPreffered, totalMapped: totalMapped, displayName: displayName });\n    }\n  };\n  let dataHandler2 = () => {\n    matchArray.forEach((match, number) => {\n      let winteam;\n      let losePlayersId = [];\n      let winPlayersId = [];\n      match.teams.forEach((team) => {\n        if(team.winner){\n          winteam = team.teamId;\n        }\n      });\n      match.participants.forEach((player) => {\n        if(player.teamId === winteam){\n          winPlayersId.push(player.participantId);\n        }\n        else{\n          losePlayersId.push(player.participantId);\n        }\n      });\n      match.participantIdentities.forEach((participant) => {\n        winPlayersId.forEach((partId) => {\n          if(participant.participantId === partId){\n            if(participant.player.summonerId === id){\n              match.participantIdentities.forEach((partWin) => {\n                winPlayersId.forEach((partWinId) => {\n                  if(partWin.participantId === partWinId){\n                    winners.push(partWin.player.summonerName);\n                  }\n                });\n              });\n            }\n          }\n        });\n        losePlayersId.forEach((partId) => {\n          if(participant.participantId === partId){\n            if(participant.player.summonerId === id){\n              match.participantIdentities.forEach((partLose) => {\n                losePlayersId.forEach((partLoseId) => {\n                  if(partLose.participantId === partLoseId){\n                    losers.push(partLose.player.summonerName);\n                  }\n                });\n              });\n            }\n          }\n        });\n      });\n    });\n    return dataHandler3();\n    if(dc){\n      return;\n    }\n  };\n  let dataHandler1 = () => {\n    let matchListMap = (match) => {\n      return match.matchId;\n    };\n    let matchIdList = matchList.matches.map(matchListMap);\n    // create a list of match IDs, instead of details. We really only care\n    // about IDs, so we can make requests to find out the specifics.\n    matchIdList.forEach((match, number) => {\n      // on the last iteration of the forEach function, we want to\n      // run all of the dependent code, upon request completion\n      if(dc){\n        return;\n      }\n      url = `https://na.api.pvp.net/api/lol/na/v2.2/match/${match}?api_key=RGAPI-185B94BD-6063-4F75-81CB-B5D98501B146`;\n      getter = (err, response, data) => {\n        if(!response){\n          request(response.request.uri.href, getter);\n        }\n        else {\n          if(response.statusCode > 310){\n            console.error(response.statusCode);\n            if(response.statusCode === 429){\n              if(response.headers.hasOwnProperty(\"retry-after\")){\n                request(response.request.uri.href, getter, (response.headers.retry-after * 1000));\n              }\n              else {\n                request(response.request.uri.href, getter, 5000);\n              }\n            }\n            else if(response.statusCode === 404){\n              console.log(\"request:\" + (count + 1) + \" / \" + matchIdList.length);\n              //DO NOTHING!\n              count++;\n              if(count === matchIdList.length){\n                console.log(\"finished!\");\n                return dataHandler2();\n              }\n            }\n            else {\n              request(response.request.uri.href, getter, 5000);\n            }\n          }\n          else {\n            console.log(\"request:\" + (count + 1) + \" / \" + matchIdList.length);\n            result = JSON.parse(data);\n            status = response.statusCode;\n            matchArray.push(result);\n            // if the request returns valid information, push it on to\n            // the matchlist. If not, don't do anything.\n            // in an ideal world, we would capture everything, but for\n            // our purposes, it is okay if we drop a match or two\n            // not to mention, reloading the page is not that hard,\n            // if for some reason there is a server or connection\n            // error, with Riot.\n            count++;\n            if(count === matchIdList.length){\n              console.log(\"finished!\");\n              return dataHandler2();\n            }\n          }\n        }\n      };\n      request(url, getter);\n    });\n  };\n\n  // hoist variables to keep them in the global scope\n  id = Number(cookies.id);\n  displayName = cookies.displayName;\n  // fill out variables, given previous searches with cookies, making sure\n  // that it is the same as the person they are searching for\n  // this allows us to skip a large part of the process down below,\n  // letting us know their ID and that the account exists and is ranked.\n  // So, we make less requests and speed up the process.\n  url = `https://na.api.pvp.net/api/lol/na/v2.2/matchlist/by-summoner/${id}?rankedQueues=TEAM_BUILDER_DRAFT_RANKED_5x5,RANKED_SOLO_5x5&seasons=SEASON2016&api_key=RGAPI-185B94BD-6063-4F75-81CB-B5D98501B146`;\n  // TODO: change this url every time there is a new season, so that results\n  // will be current with year.\n  // make a request to get a list of all the match IDs that the user has\n  // played in ranked this year.\n\n  let getter = (err, response, data) => {\n    if(response.statusCode > 310){\n      console.error(response.statusCode);\n      if(response.statusCode === 429){\n        if(response.headers.hasOwnProperty(\"retry-after\")){\n          request(response.request.uri.href, getter, (response.headers.retry-after * 1000));\n        }\n        else {\n          request(response.request.uri.href, getter, 5000);\n        }\n      }\n      else if(response.statusCode === 404){\n        return res.redirect(\"../../../error/404\");\n      }\n      else {\n        request(response.request.uri.href, getter, 5000);\n      }\n    }\n    else {\n      matchList = JSON.parse(data);\n      return dataHandler1();\n      if(dc){\n        return;\n      }\n    }\n  };\n  return request(url, getter);\n};\n\nexport default SuggestionsController;\n"]}