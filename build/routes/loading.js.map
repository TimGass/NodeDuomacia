{"version":3,"sources":["../../server/routes/loading.js"],"names":[],"mappings":"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","file":"loading.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nvar request = require(\"request\");\n\n/* GET users listing. */\nrouter.get('/:summoner/loading', function(req, res, next) {\n  let status;\n  if(req.cookies.id && req.cookies.displayName && (req.cookies.displayName === req.params.summoner)){\n    res.render(\"loading\", { waitTime: req.cookies.waitTime });\n  }\n  else {\n    let trueName = decodeURIComponent(req.params.summoner).toLowerCase().replace(/[\\s,.\\/;'\\[\\]\\\\=`<>?:\\\"{}|_+~!@#$%^&*()-]/gm, \"\");\n    //remove characters not allowed in account names\n    if(trueName.length === 0){\n      return res.redirect(\"../../../error/empty\");\n    }\n    // if empty, return error. In this case, empty is used to let the person\n    // know they have inputed an invalid account\n    let url = `https://na.api.pvp.net/api/lol/na/v1.4/summoner/by-name/${trueName}?api_key=92883dda-0342-4f3c-b9aa-dcc33dbcd75c`;\n    //make request for account id, so more requests can be made using that id.\n\n    request(url, (err, response, data) => {\n      //catch errors, this will be in the format of all future requests.\n      let result = data;\n      status = response.statusCode;\n\n      // define a function to run all the code that depends on the above request\n      if(status > 310){\n        return res.redirect(`../../../error/${status}`);\n      }\n      result = JSON.parse(result);\n      let displayName = result[trueName].name;\n      // use Riot's response to what the account name really is.\n      let id = result[trueName].id;\n      let idResult;\n      // hoisted to keep the scope outside of the request promise level and on the\n      // same level as code that is run aftwerwards, probably not necessary but\n      // does not hurt to be extra safe.\n      url = `https://na.api.pvp.net/api/lol/na/v2.5/league/by-summoner/${id}?api_key=92883dda-0342-4f3c-b9aa-dcc33dbcd75c`;\n      // makes request to find the league of the account to ensure they are\n      // ranked this season.\n\n      let dataHandler = () => {\n        if(status === 404){\n          status = \"unranked\";\n          return res.redirect(`../../../${status}`);\n          // A 404 after getting a valid idea tells us that the account exists,\n          // but is unranked this season.\n        }\n        else if(status > 310){\n          return res.redirect(`../../../${status}`);\n        }\n        res.cookie(\"id\", id, { maxAge: 259200, httpOnly: true });\n        res.cookie(\"displayName\", displayName, { maxAge: 259200, httpOnly: true });\n        // set cookies to speed up process and get rid of two requests, if they\n        // return and search for the same person.\n\n        return res.render(\"loading\", { waitTime: req.cookies.waitTime });\n      };\n\n      request(url, (err, response, data) => {\n        let result = data;\n        status = response.statusCode;\n        if(status === 404){\n          status = \"unranked\";\n          return res.redirect(`../../../${status}`);\n          // A 404 after getting a valid idea tells us that the account exists,\n          // but is unranked this season.\n        }\n        else if(status > 310){\n          return res.redirect(`../../../${status}`);\n        }\n        idResult = JSON.parse(data);\n        status = response.statusCode;\n        dataHandler();\n      });\n      // run a function containing all code that depends on this request in the\n      // promise function of request, to avoid Async issues\n    });\n  }\n});\n\nmodule.exports = router;\n"]}